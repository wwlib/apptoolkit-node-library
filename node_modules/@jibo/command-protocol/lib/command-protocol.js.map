{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","src/Enums.ts","src/TypeGuards.ts","src/index.ts"],"names":[],"mappings":"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","file":"command-protocol.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference types=\"../typings\"/>\n/**\n * Enum of TakePhoto events.\n * @typedef PhotoEvents\n * @prop TakePhoto `onTakePhoto`\n */\nexport const PhotoEvents: {\n    TakePhoto: JIBO.v1.PhotoEvents.TakePhoto;\n} = {\n    TakePhoto: 'onTakePhoto'\n};\n\n/**\n * Enum of video events\n * @typedef VideoEvents\n * @prop VideoReady `onVideoReady`\n */\nexport const VideoEvents: {\n    VideoReady: JIBO.v1.VideoEvents.VideoReady;\n} = {\n    VideoReady: 'onVideoReady'\n};\n\n/**\n * @description Enum of skill disconnect reasons\n * @typedef DisconnectReason\n * @prop 4000 Skill closed by user\n * @prop 4001 Skill closed due to robot error\n * @prop 4002 Incoming connection is replacing previous connection\n * @prop 4003 Connection closed due to inactivity\n * @prop 4004 Session closed due to reconnection time out\n * @prop 4005 Session closed due to failed reconnection\n */\nexport const DisconnectReason:JIBO.v1.DisconnectReason = {\n    4000: 'Skill closed by user',\n    4001: 'Skill closed due to robot error',\n    4002: 'Incoming connection is replacing previous connection',\n    4003: 'Connection closed due to inactivity',\n    4004: 'Session closed due to reconnection time out',\n    4005: 'Session closed due to failed reconnection'\n};\n\n/**\n * Enum of websocket close codes\n * @typedef DisconnectCode\n * @prop HeadTouchExit `4000` - The Remote skill was exited via head touch on robot\n * @prop RobotError `4001` - The Remote skill was exited due to an error on the robot resulting in the error display taking over.\n * @prop NewConnection `4002` - A new Remote connection is superseding the existing one.\n * @prop InactivityTimeout `4003` - The connection was closed due to inactivity (no commands sent)\n * @prop ReconnectTimeout `4004` - Session timed out waiting for reconnect\n * @prop ReconnectError `4005` - Session unable to wait for a reconnect\n */\nexport const DisconnectCode: {\n    HeadTouchExit: JIBO.v1.DisconnectCodes.HeadTouchExit;\n    RobotError: JIBO.v1.DisconnectCodes.RobotError;\n    NewConnection: JIBO.v1.DisconnectCodes.NewConnection;\n    InactivityTimeout: JIBO.v1.DisconnectCodes.InactivityTimeout;\n    ReconnectTimeout: JIBO.v1.DisconnectCodes.ReconnectTimeout;\n    ReconnectError: JIBO.v1.DisconnectCodes.ReconnectError;\n} = {\n    HeadTouchExit: 4000,\n    RobotError: 4001,\n    NewConnection: 4002,\n    InactivityTimeout: 4003,\n    ReconnectTimeout: 4004,\n    ReconnectError: 4005,\n};\n\n/**\n * @typedef ResponseStrings\n * @intdocs\n * @description Maps the [Response Code]{@link ResponseCode} numbers to their strings (i.e. `200` = `OK`, `404` = `NotFound`, etc).\n */\nexport const ResponseStrings:JIBO.v1.ResponseStrings = {\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    400: 'Bad Request',\n    403: 'Forbidden',\n    404: 'Not Found',\n    406: 'Not Acceptable',\n    407: 'Request Timeout',\n    409: 'Conflict',\n    412: 'Precondition Failed',\n    500: 'Internal Error',\n    503: 'Service Unavailable',\n    505: 'Version Not Supported',\n    506: 'Version Conflict'\n};\n\n/**\n * Enum of Jibo's available attention modes.\n * @typedef AttentionMode\n * @intdocs\n * @prop Off\n * @prop Idle\n * @prop Disengage\n * @prop Engaged\n * @prop Speaking\n * @prop Fixated\n * @prop Attractable\n * @prop Menu\n * @prop Command\n */\nexport const AttentionMode: {\n    Off:JIBO.v1.AttentionModes.Off;\n    Idle:JIBO.v1.AttentionModes.Idle;\n    Disengage:JIBO.v1.AttentionModes.Disengage;\n    Engaged:JIBO.v1.AttentionModes.Engaged;\n    Speaking:JIBO.v1.AttentionModes.Speaking;\n    Fixated:JIBO.v1.AttentionModes.Fixated;\n    Attractable: JIBO.v1.AttentionModes.Attractable;\n    Menu :JIBO.v1.AttentionModes.Menu;\n    Command:JIBO.v1.AttentionModes.Command;\n} = {\n    Off:'OFF',\n    Idle:'IDLE',\n    Disengage:'DISENGAGE',\n    Engaged:'ENGAGED',\n    Speaking:'SPEAKING',\n    Fixated:'FIXATED',\n    Attractable: 'ATTRACTABLE',\n    Menu :'MENU',\n    Command:'COMMAND'\n};\n\n/**\n * @typedef CommandTypes\n * @intdocs\n * @description Enum of command types.\n * @prop StartSession\n * @prop GetConfig\n * @prop SetConfig\n * @prop Cancel\n * @prop Display\n * @prop SetAttention\n * @prop Say\n * @prop Listen\n * @prop LookAt\n * @prop TakePhoto\n * @prop Video\n * @prop Subscribe\n * @prop FetchAsset\n * @prop UnloadAsset\n */\nexport const CommandTypes: {\n        StartSession: JIBO.v1.Commands.StartSession;\n        GetConfig: JIBO.v1.Commands.GetConfig;\n        SetConfig: JIBO.v1.Commands.SetConfig;\n        Cancel: JIBO.v1.Commands.Cancel;\n        Display: JIBO.v1.Commands.Display;\n        SetAttention: JIBO.v1.Commands.SetAttention;\n        Say: JIBO.v1.Commands.Say;\n        Listen: JIBO.v1.Commands.Listen;\n        LookAt: JIBO.v1.Commands.LookAt;\n        TakePhoto: JIBO.v1.Commands.TakePhoto;\n        Video: JIBO.v1.Commands.Video;\n        Subscribe: JIBO.v1.Commands.Subscribe;\n        FetchAsset: JIBO.v1.Commands.FetchAsset;\n        UnloadAsset: JIBO.v1.Commands.UnloadAsset;\n\n} = {\n    StartSession: 'StartSession',\n    GetConfig: 'GetConfig',\n    SetConfig: 'SetConfig',\n    Cancel: 'Cancel',\n    Display: 'Display',\n    SetAttention: 'SetAttention',\n    Say: 'Say',\n    Listen: 'Listen',\n    LookAt: 'LookAt',\n    TakePhoto: 'TakePhoto',\n    Video: 'Video',\n    Subscribe: 'Subscribe',\n    FetchAsset: 'FetchAsset',\n    UnloadAsset: 'UnloadAsset'\n};\n\n/**\n * Enum of async command events.\n * @typedef AsyncCommandEvent\n * @prop Start `onStart` - Asynchronous command has started.\n * @prop Stop `onStop` - Asynchronous command has stopped.\n * @prop Error `onError` - An attempt to move from Requested to Start resulted in an Error.\n */\nexport const AsyncCommandEvent:{\n    Start:JIBO.v1.AsyncCommandEvents.Start;\n    Stop:JIBO.v1.AsyncCommandEvents.Stop;\n    Error:JIBO.v1.AsyncCommandEvents.Error;\n} = {\n    Start: \"onStart\",\n    Stop: \"onStop\",\n    Error: \"onError\",\n};\n\n/**\n * Enum of display events.\n * @typedef DisplayEvents\n * @prop ViewStateChange `onViewStateChange`\n */\nexport const DisplayEvents:{\n    ViewStateChange: JIBO.v1.DisplayEvents.ViewStateChange;\n} = {\n    ViewStateChange: 'onViewStateChange'\n};\n\n/**\n * Enum of possible view states\n * @typedef ViewStates\n * @prop Opened\n * @prop Closed\n */\nexport const ViewStates: {\n    Opened: JIBO.v1.ViewStates.Opened;\n    Closed: JIBO.v1.ViewStates.Closed;\n} = {\n    Opened: 'Opened',\n    Closed: 'Closed'\n};\n\n/**\n * @typedef DisplayViewType\n * @intdocs\n * @description Enum of available display types\n * @prop Eye Display Jibo's eye on screen.\n * @prop Text Display text on screen.\n * @prop Image Display an image on screen.\n * @prop Empty Display an Empty view on screen.\n */\nexport const DisplayViewType: {\n    Eye:JIBO.v1.DisplayViews.Eye;\n    Text:JIBO.v1.DisplayViews.Text;\n    Image:JIBO.v1.DisplayViews.Image;\n    Empty:JIBO.v1.DisplayViews.Empty;\n} = {\n    Eye: 'Eye',\n    Text: 'Text',\n    Image: 'Image',\n    Empty:'Empty',\n};\n\n/**\n * @typedef LookAtEvents\n * @prop LookAtAchieved `onLookAtAchieved`\n * @prop TrackEntityLost `onTrackEntityLost`\n */\nexport const LookAtEvents: {\n    LookAtAchieved: JIBO.v1.LookAtEvents.LookAtAchieved;\n    TrackEntityLost: JIBO.v1.LookAtEvents.TrackEntityLost;\n} = {\n    LookAtAchieved: 'onLookAtAchieved',\n    TrackEntityLost: 'onTrackEntityLost'\n};\n\n/**\n * Enum of speech events.\n * @typedef HotWordEvents\n * @prop HotWordHeard `onHotWordHeard`\n * @prop ListenResult `onListenResult`\n */\nexport const HotWordEvents: {\n    HotWordHeard:JIBO.v1.HotWordEvents.HotWordHeard;\n    ListenResult:JIBO.v1.HotWordEvents.ListenResult;\n} = {\n    HotWordHeard: 'onHotWordHeard',\n    ListenResult: 'onListenResult'\n};\n\n/**\n * @typedef StreamTypes\n * @intdocs\n * @description Enum of stream types.\n * @prop Entity\n * @prop Speech\n * @prop HeadTouch\n * @prop Motion\n * @prop ScreenGesture\n */\nexport const StreamTypes: {\n        Entity:JIBO.v1.Streams.Entity;\n        HotWord:JIBO.v1.Streams.HotWord;\n        HeadTouch:JIBO.v1.Streams.HeadTouch;\n        Motion:JIBO.v1.Streams.Motion;\n        ScreenGesture:JIBO.v1.Streams.ScreenGesture;\n} = {\n    Entity: 'Entity',\n    HotWord: 'HotWord',\n    HeadTouch: 'HeadTouch',\n    Motion: 'Motion',\n    ScreenGesture: 'ScreenGesture'\n};\n\n/**\n * @typedef ListenEvents\n * @description Enum of listen events.\n * @prop ListenResult `onListenResult`\n */\nexport const ListenEvents: {\n    ListenResult: JIBO.v1.ListenEvents.ListenResult\n} = {\n    ListenResult: 'onListenResult'\n};\n\n/**\n * @typedef ListenStopReasons\n * @description Enum of unsuccessful listen stop reasons.\n * @prop NoInput `NoInput`\n * @prop NoMatch `NoMatch`\n * @prop Interrupted `Interrupted`\n */\nexport const ListenStopReasons: {\n    NoInput: JIBO.v1.ListenStopReasons.NoInput,\n    NoMatch: JIBO.v1.ListenStopReasons.NoMatch,\n    Interrupted: JIBO.v1.ListenStopReasons.Interrupted,\n} = {\n    NoInput: 'NoInput',\n    NoMatch: 'NoMatch',\n    Interrupted: 'Interrupted'\n};\n\n/**\n * Enum of entity watching events.\n * @typedef EntityTrackEvents\n * @prop TrackUpdate `onEntityUpdate`\n * @prop TrackLost `onEntityLost`\n * @prop TrackGained `onEntityGained`\n */\nexport const EntityTrackEvents: {\n    TrackUpdate: JIBO.v1.EntityTrackEvents.TrackUpdate;\n    TrackLost: JIBO.v1.EntityTrackEvents.TrackLost;\n    TrackGained: JIBO.v1.EntityTrackEvents.TrackGained;\n} = {\n    TrackUpdate: 'onEntityUpdate',\n    TrackLost: 'onEntityLost',\n    TrackGained: 'onEntityGained',\n};\n\n/**\n * Enum of motion detection events.\n * @typedef MotionEvents\n * @prop MotionDetected `onMotionDetected`\n */\nexport const MotionEvents: {\n    MotionDetected: JIBO.v1.MotionEvents.MotionDetected;\n} = {\n    MotionDetected: 'onMotionDetected'\n};\n\n/**\n * Enum of headtouch events.\n * @typedef HeadTouchEvents\n * @prop HeadTouched `onHeadTouch`\n */\nexport const HeadTouchEvents: {\n    HeadTouched: JIBO.v1.HeadTouchEvents.HeadTouched;\n} = {\n    HeadTouched: 'onHeadTouch'\n};\n\n/**\n * Enum of screen gesture events.\n * @typedef ScreenGestureEvents\n * @prop Tap `onTap`\n * @prop Swipe `onSwipe`\n */\nexport const ScreenGestureEvents: {\n    Tap:JIBO.v1.ScreenGestureEvents.Tap;\n    Swipe:JIBO.v1.ScreenGestureEvents.Swipe;\n} = {\n    Tap: 'onTap',\n    Swipe: 'onSwipe'\n};\n\n/**\n * Enum of config events.\n * @typedef ConfigEvents\n * @prop onConfig `onConfig`\n */\nexport const ConfigEvents: {\n    onConfig: JIBO.v1.ConfigEvents.onConfig\n} = {\n    onConfig: 'onConfig'\n};\n\n\n/**\n * Enum of asset events.\n * @typedef FetchAssetEvents\n * @prop AssetReady `onAssetReady`\n * @prop AssetFailed `onAssetFailed`\n */\nexport const FetchAssetEvents: {\n    AssetReady: JIBO.v1.FetchAssetEvents.AssetReady;\n    AssetFailed: JIBO.v1.FetchAssetEvents.AssetFailed;\n} = {\n    AssetReady: 'onAssetReady',\n    AssetFailed: 'onAssetFailed'\n};\n\n/**\n * Enum of unload asset events.\n * @typedef UnloadAssetEvents\n * @prop UnloadAssetFailed `onUnloadAssetFailed`\n * @prop UnloadAssetDone `onUnloadAssetDone`\n */\nexport const UnloadAssetEvents: {\n    UnloadAssetDone: JIBO.v1.UnloadAssetEvents.UnloadAssetDone;\n    UnloadAssetFailed: JIBO.v1.UnloadAssetEvents.UnloadAssetFailed;\n} = {\n    UnloadAssetDone: 'onUnloadAssetDone',\n    UnloadAssetFailed: 'onUnloadAssetFailed'\n};\n\n/**\n * @typedef CameraResolution\n * @intdocs\n * @description Enum of camera resolutions\n * @prop HighRes Currently unsupported\n * @prop MedRes Higher res than default\n * @prop LowRes Default\n * @prop MicroRes Lower res than default\n */\nexport const CameraResolution: {\n    HighRes: JIBO.v1.CameraResolutions.HighRes;\n    MedRes: JIBO.v1.CameraResolutions.MedRes;\n    LowRes: JIBO.v1.CameraResolutions.LowRes;\n    MicroRes: JIBO.v1.CameraResolutions.MicroRes;\n} = {\n    HighRes: 'highRes',\n    MedRes: 'medRes',\n    LowRes: 'lowRes',\n    MicroRes: 'microRes'\n};\n\n/**\n * Enum of available swipe directions.\n * @typedef SwipeDirection\n * @prop Up\n * @prop Down\n * @prop Right\n * @prop Left\n */\nexport const SwipeDirection: {\n    Up: JIBO.v1.SwipeDirections.Up;\n    Down: JIBO.v1.SwipeDirections.Down;\n    Right: JIBO.v1.SwipeDirections.Right;\n    Left: JIBO.v1.SwipeDirections.Left;\n} = {\n    Up: 'Up',\n    Down: 'Down',\n    Right: 'Right',\n    Left: 'Left'\n};\n\n/**\n * Camera options.\n * @intdocs\n * @typedef Camera\n * @prop left Default\n * @prop right Currently unsupported\n */\nexport const Camera: {\n    Left: JIBO.v1.Cameras.Left;\n    Right: JIBO.v1.Cameras.Right;\n} = {\n    Left: 'left',\n    Right: 'right'\n};\n\n/**\n * Enum of entity (face) types.\n * @typedef EntityType\n * @prop person Face is a loop member.\n * @prop unknown Face is not a loop member.\n */\nexport const EntityType: {\n    Person: JIBO.v1.Entities.Person;\n    Unknown: JIBO.v1.Entities.Unknown;\n} = {\n    Person: 'person',\n    Unknown: 'unknown'\n};\n\n/**\n * @typedef DisplayErrorDetails\n * @intdocs\n * @prop IdNotUnique View id is not unique\n * @prop MissingValues View was not given required values\n * @prop InvalidViewType View type is not valid\n * @prop AssetError Unable to access assets for display\n */\nexport const DisplayErrorDetails:JIBO.v1.DisplayErrorDetails = {\n    IdNotUnique: 'View id is not unique',\n    //response code 406 (NotAcceptable)\n    MissingValues: 'View was not given required values',\n    //response code 406 (NotAcceptable)\n    InvalidViewType: 'View type is not valid',\n    //response code 400 (BadRequest)\n    AssetError: 'Unable to access assets for display',\n};\n\n/**\n * @typedef DisplayChangeType\n * @intdocs\n * @description Enum of ways to change display\n * @prop Swap Swap the current view for another\n */\nexport const DisplayChangeType: {\n    Swap: JIBO.v1.DisplayChanges.Swap;\n} = {\n    Swap: 'Swap',\n};\n\n/**\n * @typedef FetchAssetErrorDetails\n * @prop OutOfMemory {string} [Response Code]{@link ResponseCode}\n *       406 (NotAcceptable) - Out of memory\n * @prop InvalidURI {string} [Response Code]{@link ResponseCode}\n *       406 (NotAcceptable) - Invalid or Inaccessible URI\n */\nexport const FetchAssetErrorDetails:JIBO.v1.FetchAssetErrorDetails = {\n    OutOfMemory: 'Out of memory',\n    InvalidURI: 'Invalid or Inaccessible URI'\n};\n\n/**\n * @typedef UnloadAssetErrorDetails\n * @prop InvalidName {string}\n *       406 (NotAcceptable) - Invalid or Inaccessible Name\n */\nexport const UnloadAssetErrorDetails:JIBO.v1.UnloadAssetErrorDetails = {\n    InvalidName: 'Invalid or Inaccessible Name'\n};\n/**\n * @typedef ResponseCode\n * @description Enum of response codes\n * @prop OK `200` - The command was accepted and executed. Synchronous calls only.\n * @prop Created `201` - The command was accepted and executed. Synchronous calls only.\n * @prop Accepted `202` - The command was accepted and will begin execution. Most asynchronous commands will get a this response.\n * @prop BadRequest `400` - Badly formatted request.\n * @prop Forbidden `403` - The command request is not a supported command.\n * @prop NotFound `404` - Command not found.\n * @prop NotAcceptable `406` - The data in the command is not acceptable.\n * @prop RequestTimeout `407 - Unable to marshal the resources and set up the command within the time limits set in the Controller.\n * @prop Conflict `409` - There is a conflicting command already executing\n * @prop PreconditionFailed `412` - The execution of the command requires the execution of a prior command.\n * @prop InternalError `500` - The Controller has crashed or hit a different error that was unexpected.\n * @prop ServiceUnavailable `503` - The Controller is temporarily unavailable. The Robot SSM may be rebooting something.\n * @prop VersionNotSupported `505` - The Version requested is not supported.\n * @prop VersionConflict `506` - The Version requested is not the same version of the current connection.\n */\nexport const ResponseCode: {\n    OK: JIBO.v1.ResponseCodes.OK;\n    Created: JIBO.v1.ResponseCodes.Created;\n    Accepted: JIBO.v1.ResponseCodes.Accepted;\n    BadRequest: JIBO.v1.ResponseCodes.BadRequest;\n    Forbidden: JIBO.v1.ResponseCodes.Forbidden;\n    NotFound: JIBO.v1.ResponseCodes.NotFound;\n    NotAcceptable: JIBO.v1.ResponseCodes.NotAcceptable;\n    RequestTimeout: JIBO.v1.ResponseCodes.RequestTimeout;\n    Conflict: JIBO.v1.ResponseCodes.Conflict;\n    PreconditionFailed: JIBO.v1.ResponseCodes.PreconditionFailed;\n    InternalError: JIBO.v1.ResponseCodes.InternalError;\n    ServiceUnavailable: JIBO.v1.ResponseCodes.ServiceUnavailable;\n    VersionNotSupported: JIBO.v1.ResponseCodes.VersionNotSupported;\n    VersionConflict: JIBO.v1.ResponseCodes.VersionConflict;\n} = {\n    OK: 200,\n    Created: 201,\n    Accepted: 202,\n    BadRequest: 400,\n    Forbidden: 403,\n    NotFound: 404,\n    NotAcceptable: 406,\n    RequestTimeout: 407,\n    Conflict: 409,\n    PreconditionFailed: 412,\n    InternalError: 500,\n    ServiceUnavailable: 503,\n    VersionNotSupported: 505,\n    VersionConflict: 506\n};\n\n/**\n * @typedef VideoType\n * @intdocs\n * @description Enum of video types\n * @prop Normal `NORMAL` Default\n * @prop Debug `DEBUG` Currently unsupported.\n */\nexport const VideoType: {\n    Normal: JIBO.v1.Videos.Normal;\n    Debug: JIBO.v1.Videos.Debug;\n} = {\n    Normal: 'NORMAL',\n    Debug: 'DEBUG'\n};\n\n/**\n * @typedef ProtocolVersions\n * @intdocs\n * @description Two of everything! `JIBO.ProtocolVersions` lives in Phoenix repos.\n * @prop v1 {JIBO.ProtocolVersions.v1} `1.0`\n * @prop v2 {JIBO.ProtocolVersions.v2} `2.0`\n */\nexport const ProtocolVersions: {\n    v1: JIBO.ProtocolVersions.v1;\n    v2: JIBO.ProtocolVersions.v2;\n} = {\n    v1: '1.0',\n    v2: '2.0'\n};\n","/// <reference types=\"../typings\"/>\nexport function isEvent(message:JIBO.v1.Acknowledgement|JIBO.v1.EventMessage): message is JIBO.v1.EventMessage {\n    return message.hasOwnProperty('EventBody');\n}\n\nexport function isAcknowledgement(message:JIBO.v1.Acknowledgement|JIBO.v1.EventMessage): message is JIBO.v1.Acknowledgement {\n    return message.hasOwnProperty('Response');\n}\n\nexport function isAngleTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.AngleTarget {\n    return target.hasOwnProperty('Angle');\n}\n\nexport function isEntityTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.EntityTarget {\n    return target.hasOwnProperty('Entity');\n}\n\nexport function isPositionTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.PositionTarget {\n    return target.hasOwnProperty('Position');\n}\n\nexport function isCameraTarget(target:JIBO.v1.LookAtTarget): target is JIBO.v1.CameraTarget {\n    return target.hasOwnProperty('ScreenCoords');\n}","export * from './Enums';\nimport * as typeguards from './TypeGuards';\nexport {typeguards};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}